version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_web
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "7777:7777"
    env_file:
      - envs/.env
    depends_on:
      - db
    networks:
      - webnet

  db:
    image: postgres:15-alpine
    container_name: django_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=university
      - POSTGRES_PASSWORD=1253
    ports:
      - "5432:5432"
    networks:
      - webnet

#  bot:
#    build:
#      context: .
#      dockerfile: ./compose/django/Dockerfile
#    image: support_bot
#    command: python /app/Bot/main.py
#    volumes:
#      - .:/app
#    env_file:
#      - envs/.env
#    depends_on:
#      - db
#    networks:
#      - webnet

  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - webnet
    logging:
      options:
        max-size: '10m'
        max-file: '3'

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TRUST_DOWNSTREAM_PROXY=false
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    networks:
      - webnet

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost.d:/etc/nginx/vhost.d:rw
    networks:
      - webnet

volumes:
  static_volume:
  postgres_data:
  media_volume:


networks:
  webnet:
    external: true